<!-- views/index.ejs -->
<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>
    D3 graph
  </title>

  <style>
    body {
      font-family: Arial, sans-serif;
      padding: 20px;
      max-width: 800px;
      margin: 0 auto;
    }

    .data-section {
      margin: 20px 0;
    }

    table {
      width: 100%;
      border-collapse: collapse;
      margin-top: 10px;
    }

    th,
    td {
      border: 1px solid #ddd;
      padding: 8px;
      text-align: left;
    }

    th {
      background-color: #f4f4f4;
    }

    h2 {
      color: #333;
      margin-top: 30px;
    }
  </style>
</head>

<body>
  <h1>
    <%= title %>
  </h1>
  <div id="chart-container"></div>
  <div class="data-section">
    <h2>Test Data</h2>
    <table>
      <tr>
        <th>Position</th>
        <th>Force (N)</th>
        <th>Strain</th>
        <th>Stress (MPa)</th>
      </tr>
      <% for(let i=0; i < labels.length; i++) { %>
        <tr>
          <td>
            <%= labels[i] %>
          </td>
          <td>
            <%= forces[i] %>
          </td>
          <td>
            <%= strains[i] %>
          </td>
          <td>
            <%= stresses[i] %>
          </td>
        </tr>
        <% } %>
    </table>
  </div>


  <script src="https://d3js.org/d3.v7.min.js"></script>
  <script>

    try {
      const data = [
        { name: "Red", value: 300 },
        { name: "Blue", value: 50 },
        { name: "Yellow", value: 100 }
      ];

      const width = 500;
      const height = 400;
      const margin = { top: 20, right: 20, bottom: 20, left: 20 };
      const radius = Math.min(width - margin.left - margin.right, height - margin.top - margin.bottom) / 2;

      const svg = d3.select("#chart-container")
        .append("svg")
        .attr("width", width)
        .attr("height", height);

      // Create color scale
      const colorScale = d3.scaleOrdinal(d3.schemeCategory10);

      // Create pie layout
      const pieLayout = d3.pie()
        .value(d => d.value);

      // Create arc generator
      const arcGenerator = d3.arc()
        .innerRadius(0)
        .outerRadius(radius);

      // Create groups for arcs
      const arcs = svg.selectAll(".arc")
        .data(pieLayout(data))
        .enter().append("g")
        .attr("class", "arc");

      // Add paths to arcs
      arcs.append("path")
        .attr("d", arcGenerator)
        .attr("fill", function (d) {
          return colorScale(d.data.name);
        });

      // Add labels
      const labelArc = d3.arc()
        .outerRadius(radius * 0.8)
        .innerRadius(radius * 0.8);

      arcs.append("text")
        .attr("transform", function (d) {
          return "translate(" + labelArc.centroid(d) + ")";
        })
        .attr("dy", ".35em")
        .text(function (d) { return d.data.name; });

      // Add title
      svg.append("text")
        .attr("x", width / 2)
        .attr("y", 20)
        .attr("text-anchor", "middle")
        .text("Pie Chart Example");

    } catch (error) {
      console.error("Error creating chart:", error);
    }
  </script>


</body>

</html>